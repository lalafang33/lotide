const assertEqual = function(actual, expected) {
  if (actual === expected){
    console.log(`Assertion Passed: ${actual} === ${expected}`);
  } else {
    console.log(`Assertion Failed: ${actual} !== ${expected}`);
  }
  };

  const eqArrays = function(arr1,arr2) {
    if (arr1.length !== arr2.length) {
      return false;
    }
    for (let i = 0; i < arr1.length; i++) {
      if (arr1[i] !== arr2[i]) {
        return false;
      }
    }
    return true;
  }


// Returns true if both objects have identical keys with identical values.
// Otherwise you get back a big fat false!
const eqObjects = function(object1, object2) {
  let eq = true;

    if (Object.keys(object1).length === Object.keys(object2).length) {
        for (var key1 in object1) {
            for (var key2 in object2) {
                if (key1 === key2 && !eqArrays(object1[key1], object2[key2])) {
                    eq = false;
                }
            }
        }
    }
    else {
        eq = false;
    }
    return eq;
};
const eqObjects = function (object1, object2) {
  let eq = true;

  if (Object.keys(object1).length === Object.keys(object2).length) {
      for (var key1 in object1) {
          for (var key2 in object2) {
              if (key1 === key2 && !eqArrays(object1[key1], object2[key2])) {
                  eq = false;
              }
          }
      }
  }
  else {
      eq = false;
  }
  return eq;
};

const assertObjectsEqual = function (actual, expected) {
  const inspect = require('util').inspect;
  if (eqObjects(actual, expected)) {
      console.log(`âœ…âœ…âœ… Assertion Passed: ${inspect(actual)} === ${inspect(expected)}`);
  }
  else {
      console.log(`ðŸ›‘ðŸ›‘ðŸ›‘ Assertion Failed: ${inspect(actual)} !== ${inspect(expected)}`);
  }
};

const ab = { a: "1", b: "2", c: 3};
const ba = { b: "2", a: "1" };
assertObjectsEqual(ab, ba);